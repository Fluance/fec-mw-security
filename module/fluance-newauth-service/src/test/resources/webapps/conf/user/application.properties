server.port=8080

server.context-path=/user

spring.main.web-environment=true

app.header.from-public-network=x-request-from-internet

#---------------- Datasource props --------------------------------------------------
spring.datasource.platform=postgres
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:45432/ehuserprofile
spring.datasource.username=wso2
spring.datasource.password=wso2


# The following should all trigger validation of (idle) connections 
# and when an exception occurs or the idle period has passed 
# the connections will be removed from the pool.
spring.datasource.max-active=30
# specify the number of initial connections
spring.datasource.initial-size=8
# specify the min and max number of idle connections
spring.datasource.max-idle=8
spring.datasource.min-idle=1
# To validate connection we need to specify a validation-query and when to validate. 
# As we want to validate periodically, 
# instead of when a connection is retrieved from the pool 
# (this to prevent broken connections in our pool).
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1
# Now that we are also validating while a connection is idle, 
# we need to specify how often we want to run this query 
# for the connections and when a connection is considered idle.
# defaults to 5000
spring.datasource.time-between-eviction-runs-millis=5000
# defaults to 60000
spring.datasource.min-evictable-idle-time-millis=60000

# Hibernate specific settings
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=net.fluance.app.spring.data.support.orm.hibernate.dialect.JsonPostgreSQL9Dialect
