#server:port=8080

entreprise.userstore.name=fluance
entreprise.userstore.type=AD

authorization.header=Authorization

#Permission service settings
permission.service.url=http://localhost:8080/user/xacml/evaluate

#Authorization settings
user-profile.service.url=http://localhost:8080/user/profile

# SAML2
saml.consumer.redirect-type.param-name=redirectType
saml.sso.url=https://localhost:9444/samlsso
saml.consumer.url=http://localhost:8080/user/saml/consume

#OAuth2
oauth2.service.token.url=http://localhost:8080/user/oauth2/token
oauth2.service.token-validate.url=http://localhost:8080/user/services/OAuth2TokenValidationService
oauth2.service.token-revoke.url=http://localhost:8080/user/oauth2/revoke

authorization.service.user.authorization-type=Basic
authorization.service.user.username=admin
authorization.service.user.password=admin

#Client credentials for Basic authentication, base-64 encoded
oauth2.service.client.authorization-type=Basic
oauth2.service.client.id=Yzd1Q3VFY2NUZzAxRnNJYXlGOTBBSndpQ3JjYTpJY3Vxb3FxZGtqWHBEVXFxUEl3cHhwUWExZlVh
oauth2.service.client.secret=

#Identity service settings
identity.scim.service.url=http://localhost:8080/user/wso2/scim/Users
#Only PEM format is supported
identity.server.cert.file-relative-path=resources/security/is_cert.pem
identity.server.cert.type=X.509

#User identity settings
identity.user.service.authorization-type=Basic
identity.user.service.username=admin
identity.user.service.password=admin
identity.user.service.url=http://localhost:8080/user/services/RemoteUserStoreManagerService
# Identity admin admin services
identity.admin.user.service.authorization-type=Basic
identity.admin.user.service.username=admin
identity.admin.user.service.password=admin
identity.admin.user.service.url=http://localhost:8080/services/UserAdmin

identity.user.fully-qualified-name.separator=/
identity.user.fully-qualified-name.layout=domain-first

default.role.name=everyone

#This password  must be known only from inside the cockpit
application.user.shared-password=fluance
#ssl.keystore.key.password=fluance
# jwt-issuer strategy means the username is the same the token issuer value provided in the JWT payload
singlepid.authorization.username.finding-strategy=JWT_ISSUER
# jwt-issuer strategy means the public key/ certificate alias in the truststore must match (be the same as) the token issuer value provided in the JWT payload
singlepid.authorization.keyalias.finding-strategy=JWT_ISSUER

jwt.default.signing-algorithm=RS256
jwt.default.type=JWT
app.jwt.issuer=fluance
# JWT validity period (in seconds)
jwt.default.validity-period=3600

# From RFC (https://tools.ietf.org/html/rfc7518): "The table below is the set of "alg" (algorithm) Header Parameter values defined by this specification for use with JWS"
#   +--------------+-------------------------------+--------------------+
#   | "alg" Param  | Digital Signature or MAC      | Implementation     |
#   | Value        | Algorithm                     | Requirements       |
#   +--------------+-------------------------------+--------------------+
#   | HS256        | HMAC using SHA-256            | Required           |
#   | HS384        | HMAC using SHA-384            | Optional           |
#   | HS512        | HMAC using SHA-512            | Optional           |
#   | RS256        | RSASSA-PKCS1-v1_5 using       | Recommended        |
#   |              | SHA-256                       |                    |
#   | RS384        | RSASSA-PKCS1-v1_5 using       | Optional           |
#   |              | SHA-384                       |                    |
#   | RS512        | RSASSA-PKCS1-v1_5 using       | Optional           |
#   |              | SHA-512                       |                    |
#   | ES256        | ECDSA using P-256 and SHA-256 | Recommended+       |
#   | ES384        | ECDSA using P-384 and SHA-384 | Optional           |
#   | ES512        | ECDSA using P-521 and SHA-512 | Optional           |
#   | PS256        | RSASSA-PSS using SHA-256 and  | Optional           |
#   |              | MGF1 with SHA-256             |                    |
#   | PS384        | RSASSA-PSS using SHA-384 and  | Optional           |
#   |              | MGF1 with SHA-384             |                    |
#   | PS512        | RSASSA-PSS using SHA-512 and  | Optional           |
#   |              | MGF1 with SHA-512             |                    |
#   | none         | No digital signature or MAC   | Optional           |
#   |              | performed                     |                    |
#   +--------------+-------------------------------+--------------------+
jwt.signing-algorithm.supported=HS256,HS384,HS512,RS256,RS384,RS512,ES256,ES384,ES512
jwt.token.url=http://localhost:8080/user/jwt/token
jwt.token-exchange.url=http://localhost:8080/user/jwt/token/exchanged

server.ssl.enabled=false

# Alias that identifies the key in the key store.
server.ssl.key-alias=fluance
# Password used to access the key in the key store.
server.ssl.key-password=fluance
# Path to the key store that holds the SSL certificate (typically a jks file).
server.ssl.key-store=target/test-classes/keystore.jks
# Password used to access the key store.
server.ssl.key-store-password=fluance
# Type of the key store.
server.ssl.key-store-type=JKS
# Trust store that holds SSL certificates.
server.ssl.trust-store=target/test-classes/truststore.jks
# Password used to access the trust store.
server.ssl.trust-store-password=fluance
# Type of the trust store.
server.ssl.trust-store-type=JKS

trusted-partners.config.file=webapps/conf/trusted-partners.json